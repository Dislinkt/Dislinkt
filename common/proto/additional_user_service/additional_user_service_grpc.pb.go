// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.1
// source: additional_user_service.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AdditionalUserServiceClient is the client API for AdditionalUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AdditionalUserServiceClient interface {
	GetFieldOfStudies(ctx context.Context, in *Get, opts ...grpc.CallOption) (*GetFieldOfStudiesResponse, error)
	GetSkills(ctx context.Context, in *Get, opts ...grpc.CallOption) (*GetSkillsResponse, error)
	GetIndustries(ctx context.Context, in *Get, opts ...grpc.CallOption) (*GetIndustriesResponse, error)
	//EDUCATION
	NewEducation(ctx context.Context, in *NewEducationRequest, opts ...grpc.CallOption) (*EducationResponse, error)
	GetAllEducation(ctx context.Context, in *GetAllEducationRequest, opts ...grpc.CallOption) (*AllEducationResponse, error)
	UpdateEducation(ctx context.Context, in *UpdateEducationRequest, opts ...grpc.CallOption) (*AllEducationResponse, error)
	DeleteEducation(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AllEducationResponse, error)
	// POSITION
	NewPosition(ctx context.Context, in *NewPositionRequest, opts ...grpc.CallOption) (*PositionResponse, error)
	GetAllPosition(ctx context.Context, in *GetAllPositionRequest, opts ...grpc.CallOption) (*AllPositionResponse, error)
	UpdatePosition(ctx context.Context, in *UpdatePositionRequest, opts ...grpc.CallOption) (*AllPositionResponse, error)
	DeletePosition(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AllPositionResponse, error)
	// SKILL
	NewSkill(ctx context.Context, in *NewSkillRequest, opts ...grpc.CallOption) (*SkillResponse, error)
	GetUserSkills(ctx context.Context, in *GetUserSkillsRequest, opts ...grpc.CallOption) (*UserSkillResponse, error)
	UpdateSkill(ctx context.Context, in *UpdateSkillRequest, opts ...grpc.CallOption) (*UserSkillResponse, error)
	DeleteSkill(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*UserSkillResponse, error)
	// INTEREST
	NewInterest(ctx context.Context, in *NewInterestRequest, opts ...grpc.CallOption) (*InterestResponse, error)
	GetAllInterest(ctx context.Context, in *GetAllInterestRequest, opts ...grpc.CallOption) (*AllInterestResponse, error)
	UpdateInterest(ctx context.Context, in *UpdateInterestRequest, opts ...grpc.CallOption) (*AllInterestResponse, error)
	DeleteInterest(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AllInterestResponse, error)
}

type additionalUserServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAdditionalUserServiceClient(cc grpc.ClientConnInterface) AdditionalUserServiceClient {
	return &additionalUserServiceClient{cc}
}

func (c *additionalUserServiceClient) GetFieldOfStudies(ctx context.Context, in *Get, opts ...grpc.CallOption) (*GetFieldOfStudiesResponse, error) {
	out := new(GetFieldOfStudiesResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/GetFieldOfStudies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) GetSkills(ctx context.Context, in *Get, opts ...grpc.CallOption) (*GetSkillsResponse, error) {
	out := new(GetSkillsResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/GetSkills", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) GetIndustries(ctx context.Context, in *Get, opts ...grpc.CallOption) (*GetIndustriesResponse, error) {
	out := new(GetIndustriesResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/GetIndustries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) NewEducation(ctx context.Context, in *NewEducationRequest, opts ...grpc.CallOption) (*EducationResponse, error) {
	out := new(EducationResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/NewEducation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) GetAllEducation(ctx context.Context, in *GetAllEducationRequest, opts ...grpc.CallOption) (*AllEducationResponse, error) {
	out := new(AllEducationResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/GetAllEducation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) UpdateEducation(ctx context.Context, in *UpdateEducationRequest, opts ...grpc.CallOption) (*AllEducationResponse, error) {
	out := new(AllEducationResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/UpdateEducation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) DeleteEducation(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AllEducationResponse, error) {
	out := new(AllEducationResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/DeleteEducation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) NewPosition(ctx context.Context, in *NewPositionRequest, opts ...grpc.CallOption) (*PositionResponse, error) {
	out := new(PositionResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/NewPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) GetAllPosition(ctx context.Context, in *GetAllPositionRequest, opts ...grpc.CallOption) (*AllPositionResponse, error) {
	out := new(AllPositionResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/GetAllPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) UpdatePosition(ctx context.Context, in *UpdatePositionRequest, opts ...grpc.CallOption) (*AllPositionResponse, error) {
	out := new(AllPositionResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/UpdatePosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) DeletePosition(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AllPositionResponse, error) {
	out := new(AllPositionResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/DeletePosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) NewSkill(ctx context.Context, in *NewSkillRequest, opts ...grpc.CallOption) (*SkillResponse, error) {
	out := new(SkillResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/NewSkill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) GetUserSkills(ctx context.Context, in *GetUserSkillsRequest, opts ...grpc.CallOption) (*UserSkillResponse, error) {
	out := new(UserSkillResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/GetUserSkills", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) UpdateSkill(ctx context.Context, in *UpdateSkillRequest, opts ...grpc.CallOption) (*UserSkillResponse, error) {
	out := new(UserSkillResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/UpdateSkill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) DeleteSkill(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*UserSkillResponse, error) {
	out := new(UserSkillResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/DeleteSkill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) NewInterest(ctx context.Context, in *NewInterestRequest, opts ...grpc.CallOption) (*InterestResponse, error) {
	out := new(InterestResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/NewInterest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) GetAllInterest(ctx context.Context, in *GetAllInterestRequest, opts ...grpc.CallOption) (*AllInterestResponse, error) {
	out := new(AllInterestResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/GetAllInterest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) UpdateInterest(ctx context.Context, in *UpdateInterestRequest, opts ...grpc.CallOption) (*AllInterestResponse, error) {
	out := new(AllInterestResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/UpdateInterest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *additionalUserServiceClient) DeleteInterest(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AllInterestResponse, error) {
	out := new(AllInterestResponse)
	err := c.cc.Invoke(ctx, "/additional_user_service_proto.AdditionalUserService/DeleteInterest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdditionalUserServiceServer is the server API for AdditionalUserService service.
// All implementations must embed UnimplementedAdditionalUserServiceServer
// for forward compatibility
type AdditionalUserServiceServer interface {
	GetFieldOfStudies(context.Context, *Get) (*GetFieldOfStudiesResponse, error)
	GetSkills(context.Context, *Get) (*GetSkillsResponse, error)
	GetIndustries(context.Context, *Get) (*GetIndustriesResponse, error)
	//EDUCATION
	NewEducation(context.Context, *NewEducationRequest) (*EducationResponse, error)
	GetAllEducation(context.Context, *GetAllEducationRequest) (*AllEducationResponse, error)
	UpdateEducation(context.Context, *UpdateEducationRequest) (*AllEducationResponse, error)
	DeleteEducation(context.Context, *EmptyRequest) (*AllEducationResponse, error)
	// POSITION
	NewPosition(context.Context, *NewPositionRequest) (*PositionResponse, error)
	GetAllPosition(context.Context, *GetAllPositionRequest) (*AllPositionResponse, error)
	UpdatePosition(context.Context, *UpdatePositionRequest) (*AllPositionResponse, error)
	DeletePosition(context.Context, *EmptyRequest) (*AllPositionResponse, error)
	// SKILL
	NewSkill(context.Context, *NewSkillRequest) (*SkillResponse, error)
	GetUserSkills(context.Context, *GetUserSkillsRequest) (*UserSkillResponse, error)
	UpdateSkill(context.Context, *UpdateSkillRequest) (*UserSkillResponse, error)
	DeleteSkill(context.Context, *EmptyRequest) (*UserSkillResponse, error)
	// INTEREST
	NewInterest(context.Context, *NewInterestRequest) (*InterestResponse, error)
	GetAllInterest(context.Context, *GetAllInterestRequest) (*AllInterestResponse, error)
	UpdateInterest(context.Context, *UpdateInterestRequest) (*AllInterestResponse, error)
	DeleteInterest(context.Context, *EmptyRequest) (*AllInterestResponse, error)
	mustEmbedUnimplementedAdditionalUserServiceServer()
}

// UnimplementedAdditionalUserServiceServer must be embedded to have forward compatible implementations.
type UnimplementedAdditionalUserServiceServer struct {
}

func (UnimplementedAdditionalUserServiceServer) GetFieldOfStudies(context.Context, *Get) (*GetFieldOfStudiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFieldOfStudies not implemented")
}
func (UnimplementedAdditionalUserServiceServer) GetSkills(context.Context, *Get) (*GetSkillsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSkills not implemented")
}
func (UnimplementedAdditionalUserServiceServer) GetIndustries(context.Context, *Get) (*GetIndustriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIndustries not implemented")
}
func (UnimplementedAdditionalUserServiceServer) NewEducation(context.Context, *NewEducationRequest) (*EducationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewEducation not implemented")
}
func (UnimplementedAdditionalUserServiceServer) GetAllEducation(context.Context, *GetAllEducationRequest) (*AllEducationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllEducation not implemented")
}
func (UnimplementedAdditionalUserServiceServer) UpdateEducation(context.Context, *UpdateEducationRequest) (*AllEducationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEducation not implemented")
}
func (UnimplementedAdditionalUserServiceServer) DeleteEducation(context.Context, *EmptyRequest) (*AllEducationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEducation not implemented")
}
func (UnimplementedAdditionalUserServiceServer) NewPosition(context.Context, *NewPositionRequest) (*PositionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewPosition not implemented")
}
func (UnimplementedAdditionalUserServiceServer) GetAllPosition(context.Context, *GetAllPositionRequest) (*AllPositionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllPosition not implemented")
}
func (UnimplementedAdditionalUserServiceServer) UpdatePosition(context.Context, *UpdatePositionRequest) (*AllPositionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePosition not implemented")
}
func (UnimplementedAdditionalUserServiceServer) DeletePosition(context.Context, *EmptyRequest) (*AllPositionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePosition not implemented")
}
func (UnimplementedAdditionalUserServiceServer) NewSkill(context.Context, *NewSkillRequest) (*SkillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewSkill not implemented")
}
func (UnimplementedAdditionalUserServiceServer) GetUserSkills(context.Context, *GetUserSkillsRequest) (*UserSkillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSkills not implemented")
}
func (UnimplementedAdditionalUserServiceServer) UpdateSkill(context.Context, *UpdateSkillRequest) (*UserSkillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSkill not implemented")
}
func (UnimplementedAdditionalUserServiceServer) DeleteSkill(context.Context, *EmptyRequest) (*UserSkillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSkill not implemented")
}
func (UnimplementedAdditionalUserServiceServer) NewInterest(context.Context, *NewInterestRequest) (*InterestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewInterest not implemented")
}
func (UnimplementedAdditionalUserServiceServer) GetAllInterest(context.Context, *GetAllInterestRequest) (*AllInterestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllInterest not implemented")
}
func (UnimplementedAdditionalUserServiceServer) UpdateInterest(context.Context, *UpdateInterestRequest) (*AllInterestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInterest not implemented")
}
func (UnimplementedAdditionalUserServiceServer) DeleteInterest(context.Context, *EmptyRequest) (*AllInterestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInterest not implemented")
}
func (UnimplementedAdditionalUserServiceServer) mustEmbedUnimplementedAdditionalUserServiceServer() {}

// UnsafeAdditionalUserServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AdditionalUserServiceServer will
// result in compilation errors.
type UnsafeAdditionalUserServiceServer interface {
	mustEmbedUnimplementedAdditionalUserServiceServer()
}

func RegisterAdditionalUserServiceServer(s grpc.ServiceRegistrar, srv AdditionalUserServiceServer) {
	s.RegisterService(&AdditionalUserService_ServiceDesc, srv)
}

func _AdditionalUserService_GetFieldOfStudies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Get)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).GetFieldOfStudies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/GetFieldOfStudies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).GetFieldOfStudies(ctx, req.(*Get))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_GetSkills_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Get)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).GetSkills(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/GetSkills",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).GetSkills(ctx, req.(*Get))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_GetIndustries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Get)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).GetIndustries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/GetIndustries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).GetIndustries(ctx, req.(*Get))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_NewEducation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewEducationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).NewEducation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/NewEducation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).NewEducation(ctx, req.(*NewEducationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_GetAllEducation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllEducationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).GetAllEducation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/GetAllEducation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).GetAllEducation(ctx, req.(*GetAllEducationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_UpdateEducation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEducationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).UpdateEducation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/UpdateEducation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).UpdateEducation(ctx, req.(*UpdateEducationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_DeleteEducation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).DeleteEducation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/DeleteEducation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).DeleteEducation(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_NewPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).NewPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/NewPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).NewPosition(ctx, req.(*NewPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_GetAllPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).GetAllPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/GetAllPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).GetAllPosition(ctx, req.(*GetAllPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_UpdatePosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).UpdatePosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/UpdatePosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).UpdatePosition(ctx, req.(*UpdatePositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_DeletePosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).DeletePosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/DeletePosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).DeletePosition(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_NewSkill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewSkillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).NewSkill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/NewSkill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).NewSkill(ctx, req.(*NewSkillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_GetUserSkills_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserSkillsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).GetUserSkills(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/GetUserSkills",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).GetUserSkills(ctx, req.(*GetUserSkillsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_UpdateSkill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSkillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).UpdateSkill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/UpdateSkill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).UpdateSkill(ctx, req.(*UpdateSkillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_DeleteSkill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).DeleteSkill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/DeleteSkill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).DeleteSkill(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_NewInterest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewInterestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).NewInterest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/NewInterest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).NewInterest(ctx, req.(*NewInterestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_GetAllInterest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllInterestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).GetAllInterest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/GetAllInterest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).GetAllInterest(ctx, req.(*GetAllInterestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_UpdateInterest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInterestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).UpdateInterest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/UpdateInterest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).UpdateInterest(ctx, req.(*UpdateInterestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdditionalUserService_DeleteInterest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalUserServiceServer).DeleteInterest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/additional_user_service_proto.AdditionalUserService/DeleteInterest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalUserServiceServer).DeleteInterest(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AdditionalUserService_ServiceDesc is the grpc.ServiceDesc for AdditionalUserService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AdditionalUserService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "additional_user_service_proto.AdditionalUserService",
	HandlerType: (*AdditionalUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFieldOfStudies",
			Handler:    _AdditionalUserService_GetFieldOfStudies_Handler,
		},
		{
			MethodName: "GetSkills",
			Handler:    _AdditionalUserService_GetSkills_Handler,
		},
		{
			MethodName: "GetIndustries",
			Handler:    _AdditionalUserService_GetIndustries_Handler,
		},
		{
			MethodName: "NewEducation",
			Handler:    _AdditionalUserService_NewEducation_Handler,
		},
		{
			MethodName: "GetAllEducation",
			Handler:    _AdditionalUserService_GetAllEducation_Handler,
		},
		{
			MethodName: "UpdateEducation",
			Handler:    _AdditionalUserService_UpdateEducation_Handler,
		},
		{
			MethodName: "DeleteEducation",
			Handler:    _AdditionalUserService_DeleteEducation_Handler,
		},
		{
			MethodName: "NewPosition",
			Handler:    _AdditionalUserService_NewPosition_Handler,
		},
		{
			MethodName: "GetAllPosition",
			Handler:    _AdditionalUserService_GetAllPosition_Handler,
		},
		{
			MethodName: "UpdatePosition",
			Handler:    _AdditionalUserService_UpdatePosition_Handler,
		},
		{
			MethodName: "DeletePosition",
			Handler:    _AdditionalUserService_DeletePosition_Handler,
		},
		{
			MethodName: "NewSkill",
			Handler:    _AdditionalUserService_NewSkill_Handler,
		},
		{
			MethodName: "GetUserSkills",
			Handler:    _AdditionalUserService_GetUserSkills_Handler,
		},
		{
			MethodName: "UpdateSkill",
			Handler:    _AdditionalUserService_UpdateSkill_Handler,
		},
		{
			MethodName: "DeleteSkill",
			Handler:    _AdditionalUserService_DeleteSkill_Handler,
		},
		{
			MethodName: "NewInterest",
			Handler:    _AdditionalUserService_NewInterest_Handler,
		},
		{
			MethodName: "GetAllInterest",
			Handler:    _AdditionalUserService_GetAllInterest_Handler,
		},
		{
			MethodName: "UpdateInterest",
			Handler:    _AdditionalUserService_UpdateInterest_Handler,
		},
		{
			MethodName: "DeleteInterest",
			Handler:    _AdditionalUserService_DeleteInterest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "additional_user_service.proto",
}
