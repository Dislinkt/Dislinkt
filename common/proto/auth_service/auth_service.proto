syntax = "proto3";

option go_package = "github.com/dislinkt/auth-service/proto";

package proto;

import "google/api/annotations.proto";

service AuthService{
  rpc AuthenticateUser(LoginRequest) returns(JwtTokenResponse) {
    option (google.api.http) = {
      post: "/api/auth/login",
      body: "userData"
    };
  }

  rpc AuthenticateTwoFactoryUser(LoginTwoFactoryRequest) returns(JwtTokenResponse) {
    option (google.api.http) = {
      post: "/api/auth/two-factory-login",
      body: "*"
    };
  }

  rpc ValidateToken(ValidateRequest) returns(ValidateResponse) {
    option (google.api.http) = {
      post: "/api/auth/validate",
      body: "jwt"
    };
  }

  rpc PasswordlessLogin(PasswordlessLoginRequest) returns(PasswordlessLoginResponse) {
    option (google.api.http) = {
      put: "/api/auth/passwordless-login",
      body: "*"
    };
  }

  rpc ConfirmEmailLogin(ConfirmEmailLoginRequest) returns(ConfirmEmailLoginResponse) {
    option (google.api.http) = {
      post: "/api/auth/passwordless-confirm",
      body: "*"
    };
  }

  rpc ActivateAccount(ActivationRequest) returns(ActivationResponse) {
    option (google.api.http) = {
      put: "/api/auth/activate-account",
      body: "*"
    };
  }

  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse) {
    option (google.api.http) = {
      put: "/api/auth/change-password"
      body: "*"
    };
  }

  rpc RecoverAccount(RecoverAccountRequest) returns (RecoverAccountResponse) {
    option (google.api.http) = {
      post: "/api/auth/recover-account"
      body: "*"
    };
  }

  rpc SendAccountRecoveryMail(AccountRecoveryMailRequest) returns(AccountRecoveryMailResponse) {
    option (google.api.http) = {
      put: "/api/auth/send-account-recover-mail",
      body: "*"
    };
  }

  rpc CreateNewAPIToken(APITokenRequest) returns (NewAPITokenResponse) {
    option (google.api.http) = {
      get: "/api/auth/newApiToken/{username}"
    };
  }

  rpc CheckApiToken(JobPostingDtoRequest) returns (JobPostingDtoResponse) {
    option (google.api.http) = {
      post: "/api/auth/checkApiToken"
      body: "*"
    };
  }

}

message LoginRequest {
  UserData userData = 1;
}

message LoginTwoFactoryRequest {
  string username = 1;
  string password = 2;
  string token = 3;
}

message JwtTokenResponse {
  JwtToken jwt = 1;
}

message JwtToken {
  string jwt = 1;
}

message UserData {
  string username = 1;
  string password = 2;
}

message ValidateRequest { JwtToken jwt = 1; }

message ValidateResponse {
  int64 status = 1;
  string error = 2;
  string username = 3;
  string role = 4;
}

message PasswordlessLoginRequest{
  string email = 1;
}

message PasswordlessLoginResponse{
  string success = 1;
}

message ConfirmEmailLoginRequest{
  string token = 1;
}

message ConfirmEmailLoginResponse{
  string token = 1;
}

message ActivationRequest {
  string token = 1;
}

message ActivationResponse {
  string token = 1;
}

message ChangePasswordRequest {
  string oldPassword = 1;
  string newPassword = 2;
  string newReenteredPassword = 3;
}

message ChangePasswordResponse {
  string message = 1;
  string statusCode = 2;
}

message RecoverAccountRequest {
  string token = 1;
  string newPassword = 2;
  string newReenteredPassword = 3;
}

message RecoverAccountResponse {
  string message = 1;
  string statusCode = 2;
}

message AccountRecoveryMailRequest{
  string email = 1;
}

message AccountRecoveryMailResponse{
  string success = 1;
}


message APITokenRequest {
  string username = 1;
}

message NewAPITokenResponse {
  string token = 1;
}

message JobPostingDtoRequest{
  EmployeePositionDto position = 1;
  string description = 2;
  string preconditions = 3;
  int64 datePosted = 4;
  int32 duration = 5;
  string apiToken = 6;
}

message JobPostingDtoResponse{
  EmployeePositionDto position = 1;
  string description = 2;
  string preconditions = 3;
  int64 datePosted = 4;
  int32 duration = 5;
  string username = 6;
  string message = 7;
  string token = 8;
}

message EmployeePositionDto{
  string name = 1;
  string seniority = 2;
}

